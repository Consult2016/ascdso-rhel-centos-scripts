#!/bin/bash
#
# rhel-vulnerability-scan.sh by <ebo@>
#
# Performs a vulnerability scan on RHEL 7 using OpenSCAP

set -ueo pipefail

readonly __progname="$(basename "$0")"

errx() {
	echo -e "${__progname}: $*" >&2

	exit 1
}

main() {
	[ "${EUID}" -ne 0 ] && \
		errx "need root"

	for bin in oscap links; do
		which "${bin}" >/dev/null 2>&1 || \
			errx "cannot find '${bin}' in 'PATH=${PATH}'"
	done

	local -r tempdir="$(mktemp -d)"
	trap "rm -rf ${tempdir}" EXIT

	local -r rhel7ovalurl="https://www.redhat.com/security/data/oval"
	local -r rhel7oval="com.redhat.rhsa-RHEL7.xml"
	local -r ovalreportxml="rhsa-results-oval.xml"
	local -r ovalreporttxt="rhsa-results-oval.txt"
	local -r ovalreporthtm="rhsa-results-oval.html"

	# check for RHEL 7
	local -r osrelease="/etc/os-release"
	[ ! -f "${osrelease}" ] && \
		errx "cannot open '${osrelease}'"

	grep -q 'REDHAT_BUGZILLA_PRODUCT="Red Hat Enterprise Linux 7"' "${osrelease}" || \
		errx "this system is not RHEL7"

	cd "${tempdir}"

	echo "$0: downloading '${rhel7ovalurl}/${rhel7oval}' to '${tempdir}'"

	curl -m 10 -s "${rhel7ovalurl}/${rhel7oval}" -O || \
		errx "curl '${rhel7ovalurl}/${rhel7oval}' failed"

	echo "$0: running the OpenSCAP vulnerability scan"
	oscap oval eval --results "${ovalreportxml}" --report "${ovalreporthtm}" "${rhel7oval}" >/dev/null || \
		errx "the 'oscap' command failed"

	echo "$0: converting the OpenSCAP report html to text"
	links -dump "${ovalreporthtm}" > "${ovalreporttxt}" || \
		exit 1

	echo "$0: OpenSCAP vulnerability scan results:"
	cat "${ovalreporttxt}"
	echo

	grep -q true "${ovalreporttxt}"
	if [ $? -eq 0 ]; then
		echo "$0: [non-compliant] Vulnerabilities found:"

		grep true "${ovalreporttxt}"

		exit 1
	fi

	echo "$0: [compliant] No vulnerabilities found"

	return 0
}

main

exit $?
